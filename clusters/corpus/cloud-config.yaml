#cloud-config

# yaml-language-server: $schema=../../schema.json
users:
  - name: tyzbit
    shell: /bin/bash
    groups: [admin]
    ssh_authorized_keys: [github:tyzbit]

install:
  auto: true
  no-format: true
  # -- `no-format: true` requires `force: true` to actually install
  force: true
  reboot: true
  grub_options:
    extra_cmdline: >-
      pcie_aspm=off
      nvme_core.default_ps_max_latency_us=0
      gfxpayload=800x600x32
      gfxmode=800x600x32
  extra-dirs-rootfs: &longhorn [/var/lib/longhorn]
  # partitions.oem.size: 64
  # partitions.recovery.size: 10240
  # partitions.state.size: 20480
  # partitions.persistent.size: 10240

upgrade:
  extra-dirs-rootfs: *longhorn
reset:
  extra-dirs-rootfs: *longhorn

kubevip: { enabled: false }
# -- Not needed because of expand_partition in step "Conditionally partition sda"
# growpart: { devices: ["/"] }

bundles:
  - targets: [run://quay.io/kairos/community-bundles:flux_latest]

flux:
  # -- The actual value is in http://nas.onair/sensitive_configs.yaml
  # env:
  #   GITHUB_TOKEN: secretstuff
  github:
    owner: tyzbit
    repository: fleet-infra
    path: clusters/corpus/flux
    components-extra: image-reflector-controller,image-automation-controller
    network-policy: "false"

stages:
  # -- If a node has /dev/sda, use that. Otherwise use /dev/nvme0n1
  kairos-install.pre.before:
    - if: "[ -e /dev/sda ]"
      name: "Conditionally partition sda"
      commands:
        - |
          parted --script --machine -- /dev/sda mklabel gpt reizepart 1 2G &&
          parted --script --machine -- reizepart 1 2G
      layout: &layout
        device:
          path: /dev/sda
        # expand_partition:
        #   size: 0 # All available space
        add_partitions:
          # -- All sizes bellow are in MB
          # # -- https://kairos.io/docs/advanced/configuring_partitions/
          # - fsLabel: COS_GRUB
          #   size: 512
          #   pLabel: efi
          #   filesystem: fat
          - pLabel: oem
            fsLabel: COS_OEM
            size: 1024
          # -- https://github.com/kairos-io/kairos/issues/1265#issuecomment-1621433780
          - pLabel: recovery
            size: 10240
            fsLabel: COS_RECOVERY
          - pLabel: state
            size: 25600
            fsLabel: COS_STATE
          - pLabel: persistent
            size: 0 # use all available space
            fsLabel: COS_PERSISTENT
            filesystem: "ext4"
          # # -- missing from https://kairos.io/docs/advanced/configuring_partitions/ but needed
          # - pLabel: system
          #   size: 10240
          #   fsLabel: COS_ACTIVE
    - if: "[ ! -e /dev/sda ]"
      name: "Conditionally partition nvme0n1"
      commands:
        - |
          parted --script --machine -- /dev/nvme0n1 mklabel gpt
      layout:
        <<: *layout
        device:
          path: /dev/nvme0n1

  after-install-chroot:
    - name: "Add sensitive config values"
      downloads:
        - url: http://nas.onair/corpus_sensitive_configs.yaml
          path: /oem/50_sensitive_configs.yaml
    - name: "Add SOPS secret"
      downloads:
        - url: http://nas.onair/corpus_sops_secret.yaml
          path: /var/lib/rancher/k3s/server/manifests/sops-secret.yaml

    # -- These are in this repo
    - name: "Add cluster-specific manifests from GitHub"
      downloads:
        - url: https://raw.githubusercontent.com/tyzbit/kairos-config/main/clusters/corpus/manifests/tigera-operator.yaml
          path: /var/lib/rancher/k3s/server/manifests/tigera-operator.yaml
        - url: https://raw.githubusercontent.com/tyzbit/kairos-config/main/clusters/corpus/manifests/calico-crds.yaml
          path: /var/lib/rancher/k3s/server/manifests/calico-crds.yaml
        - url: https://raw.githubusercontent.com/tyzbit/kairos-config/main/clusters/corpus/manifests/flux-system-namespace.yaml
          path: /var/lib/rancher/k3s/server/manifests/flux-system-namespace.yaml
        - url: https://raw.githubusercontent.com/tyzbit/kairos-config/main/clusters/corpus/manifests/kubelet-config.yaml
          path: /etc/rancher/k3s/kubelet-config.yaml

    # -- (only `commands`,`entities` and `files` may have templating)
    - name: "Add control plane or worker config determined by MAC address"
      files:
        - path: /oem/60_k3s_config.yaml
          content: |
            #cloud-config{{"\n"}}
            {{- $control_label := "neuron" -}}
            {{- $worker_label := "myocyte" -}}
            {{- $coral := "6c:3c:8c:54:fe:37" -}}
            {{- $controllers := list "48:4d:7e:e7:6a:27" "18:66:da:0b:93:be" "48:4d:7e:dd:21:6e" "00:01:2e:aa:bb:be" -}}
            {{- $workers := list "6c:3c:8c:4f:6e:ff" "6c:3c:8c:54:fa:43" "this space left intentionally blank" "6c:3c:8c:54:fe:37" -}}
            {{- $no_longhorn := list "00:01:2e:aa:bb:be" -}}
            {{- $hostname := "unknown" -}}
            {{- $coral_attached := false -}}
            {{- $disable_longhorn := false -}}
            {{- $count := 1 -}}
            {{- range $net := .Values.network -}}

              {{- if has $net.macaddress $controllers -}}
                {{- range $mac := $controllers -}}
                  {{- if eq $net.macaddress $mac -}}
                    {{- $hostname = cat $control_label $count | nospace -}}
                  {{- end -}}
                  {{- $count = add $count 1 -}}
                {{- end -}}
              {{- end -}}

              {{- if has $net.macaddress $workers -}}
                {{- range $mac := $workers -}}
                  {{- if eq $net.macaddress $mac -}}
                    {{- $hostname = cat $worker_label $count | nospace -}}
                  {{- end -}}
                  {{- $count = add $count 1 -}}
                {{- end -}}
              {{- end -}}

              {{- if has $net.macaddress $no_longhorn -}}
                {{- $disable_longhorn = true -}}
              {{- end -}}

              {{- if eq $net.macaddress $coral -}}
                {{- $coral_attached = true -}}
              {{ end -}}

            {{- end -}}

            {{/* https://en.bitcoin.it/wiki/Bech32 */}}
            {{- $random_suffix := regexReplaceAll "[^qpzry9x8gf2tvdw0s3jn54khce6mua7l]" (randAlpha 32 | lower) "" | trunc 5 -}}

            {{- $bootstrap_node := eq $hostname (cat $control_label "1" | nospace) -}}
            {{- $control := hasPrefix $control_label $hostname -}}

            # Control: {{ $control }}
            # Bootstrap node: {{ $bootstrap_node }}
            # Coral: {{ $coral_attached }}
            # Disable Longhorn: {{ $disable_longhorn }}

            hostname: {{ $hostname }}-{{ $random_suffix }}
            {{- if $control }}
            k3s:
              enabled: true
              args:
                - --disable traefik,servicelb
                - --flannel-backend none
                - --disable-network-policy
                - --cluster-cidr 172.23.0.0/18
                - --service-cidr 172.23.64.0/18
                - --write-kubeconfig-mode 0644
                - --node-label "graphics=dri"
                - --node-taint node-role.kubernetes.io/control-plane=effect:PreferNoSchedule
            {{- else }}
            k3s-agent:
              enabled: true
              args:
              {{- if not $disable_longhorn }}
                - --node-label "node.longhorn.io/create-default-disk=true"
                - --node-label "longhorn=primary"
              {{- end }}
                - --node-label "graphics=dri"
                - --kubelet-arg=config=/etc/rancher/k3s/kubelet-config.yaml
            {{- end }}
            {{- if $bootstrap_node }}
              # # Disabled because the cluster is already running. Uncomment to start a new cluster.
              #   - --cluster-init
              # env: { K3S_URL: "" }
            {{- end }}
            {{- if $coral_attached }}
                - --node-label "coral=attached"
            {{- end }}

    - name: "Disable onboard network if an add-on card is present"
      if: lspci | grep Ethernet | grep -qv Aquantia
      files:
        - path: /etc/systemd/network/10-disable-onboard.network
          permissions: 0644
          content: |
            [Match]
            Name=enp0*
            [Link]
            Unmanaged=true

  # -- https://github.com/derailed/k9s/issues/1399
  initramfs:
    - name: Increase number of open files
      sysctl:
        fs.inotify.max_user_instances: "8192"
        fs.inotify.max_user_watches: "524288"

  boot:
    - name: "Format /dev/nvme0n1 if unformatted and Kairos is installed to /dev/sdX"
      # -- Double brackets needed for regex compare
      if: >-
        [[ $(lsblk -o NAME,LABEL | grep OEM) =~ "-sd" ]] &&
        [[ ! $(fdisk -lo type /dev/nvme0n1 | tail -n 1) =~ "Linux" ]]
      commands:
        - parted /dev/nvme0n1 --script -a optimal -- mklabel gpt mkpart longhorn ext4 0% 100%
        - &partition mkfs.ext4 -F /dev/nvme0n1p1

    - name: "Partition /dev/nvme0n1p1 if unpartitioned and Kairos is installed to /dev/sdX"
      if: >-
        [[ $(lsblk -o NAME,LABEL | grep OEM) =~ "-sd" ]] &&
        [[ $(lsblk -no FSTYPE /dev/nvme0n1p1) != "ext4" ]]
      commands:
        - *partition

    - name: "Mount /dev/nvme0n1p1 under /var/lib/longhorn if it exists and Kairos is installed to /dev/sdX"
      if: >-
        [[ $(lsblk -o NAME,LABEL | grep OEM) =~ "-sd" ]] &&
        [[ $(lsblk -no FSTYPE /dev/nvme0n1p1) == "ext4" ]]
      commands:
        # -- https://github.com/kairos-io/packages/blob/3482fed51f21a2155b60a0aa9ac91b1d839d1029/packages/static/kairos-overlay-files/files/system/oem/00_rootfs_uki.yaml#L43
        - umount /var/lib/longhorn
        - mount -o rw /dev/nvme0n1p1 /var/lib/longhorn

    - name: "Set up various kube environment variables"
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml
        CONTAINERD_ADDRESS: /run/k3s/containerd/containerd.sock
        CONTAINERD_NAMESPACE: k8s.io
